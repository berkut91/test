/**
*Объявление пакета, в котором находится класс
*/
package main;
/**
*Добавление библиотеки для создания графического интерфейса
*/
import javax.swing.*;
/**
*Добавление вспомогательного класса ФормМенеджер
*/
import main.FormManager;
/**
*Создание класса для осуществления перехода между формами
*/
public  class Main implements FormManager {
	/**
	*Создание переменной для открытия формы Эскобар 
	*/
	private JFrame escobar;
	/**
	*Создание переменной для открытия формы Клиент
	*/
	private JFrame client;
	/**
	*Создание переменной для открытия формы Кредитор
	*/
	private JFrame creditor;
	/**
	*Создание переменной для открытия формы Пароль 
	*/
	private JFrame password;
	/**
	*Создания метода для управления событиями 
	*/
	public static void main(String[] args) {
		/**
		*Помещение события запуска класса для осуществления перехода между формами в очередь событий 
		*/
		SwingUtilities.invokeLater(new Runnable() {
			/**
			*Создание события запуска класса для осуществления перехода между формами
			*/
	        public void run() {
	        	/**
	        	*Новый класс для осуществления перехода между формами
	        	*/
	            new Main();
	            /**
	            *Окончание создания события запуска класса для осуществления перехода между формами
	            */
	        }
	        /**
	        *Окончание обработки очереди событий 
	        */
	    });
		/**
		*Окончание создания метода для управления событиями 
		*/
	}
	/**
	*Создание метода открытия форм
	*/
	public Main() {
		/**
		*Создание формы Эскобар 
		*/
	    escobar = new form.Escobar(this);
	    /**
	    *Создание формы Клиент 
	    */
	    client = new form.client.Client(this);
	    /**
	    *Создание формы Кредитор 
	    */
	    creditor = new form.creditor.Creditor(this);
	    /**
	    *Создание формы Пароль
	    */
	    password = new main.Password(this);
	    /**
	    *Объявление открытия формы Эскобар
	    */
	    escobar.setVisible(true);
	    /**
	    *Окончание создания метода открытия форм
	    */
	}
	/**
	*Создание метода управления формами Эскобар и Клиент
	*/
	public void toggleForms() {
		/**
		*Объявление открытия или закрытия формы Эскобар
		*/
		escobar.setVisible(!escobar.isVisible());
		/**
		*Объявление открытия или закрытия формы Клиент
		*/
		client.setVisible(!client.isVisible());
		/**
		*Окончание создания метода управления формами Эскобар и Клиент
		*/
	}
	/**
	*Создание метода управления формами Эскобар и Кредитор
	*/
	public void toggleForms1() {
		/**
		*Объявление открытия или закрытия формы Эскобар
		*/
		escobar.setVisible(!escobar.isVisible());
		/**
		*Объявление открытия или закрытия формы Кредитор
		*/
		creditor.setVisible(!creditor.isVisible());
		/**
		*Объявление открытия или закрытия формы Пароль
		*/
		password.setVisible(!password.isVisible());
		/**
		*Окончание создания метода управления формами Эскобар и Кредитор
		*/
	}
	/**
	*Создание метода управления формой Пароль
	*/
	public void toggleForms2() {
		/**
		*Объявление открытия или закрытия формы Пароль
		*/
		password.setVisible(!password.isVisible());
		/**
		*Окончание создания метода управления формой Пароль
		*/
	}
	/**
	*Окончание создания класса для осуществления перехода между формами
	*/
}
